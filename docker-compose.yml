version: "3.3"

services:
  backend:
    build: .
    image: backend-latest
    container_name: backend
    stdin_open: true
    tty: true
    env_file:
      - .env

  celery:
    command: celery -A settings worker -l info --pidfile=/tmp/celery.pid
    build: .
    container_name: celery
    stdin_open: true
    tty: true
    env_file:
      - .env
    depends_on:
      - backend
      - rabbitmq
      - postgres

  flower:
#    command: celery -A settings worker -l info --pidfile=/tmp/celery.pid flower
    build: .
    container_name: flower
#    command: ./commands/start_flower.sh
    stdin_open: true
    tty: true
    env_file:
      - .env
    command: celery --broker=amqp://$RABBITMQ_DEFAULT_USER:$RABBITMQ_DEFAULT_PASS@$RABBITMQ_DEFAULT_HOST:$RABBITMQ_DEFAULT_PORT// flower
    depends_on:
      - celery
      - celerybeat
      - postgres
      - rabbitmq

  celerybeat:
    command: celery -A settings beat -l info --schedule=/tmp/celerybeat-schedule --pidfile=/tmp/celerybeat.pid
    build: .
    container_name: celerybeat
    stdin_open: true
    tty: true
    env_file:
      - .env
    depends_on:
      - celery
      - backend
      - rabbitmq
      - postgres

  memcached:
    image: memcached:latest
    container_name: memcached
    depends_on:
      - backend

  rabbitmq:
    image: rabbitmq:3.9-management
    container_name: rabbitmq
    env_file:
      - .env
    depends_on:
      - backend

  nginx:
    image: nginx:1.19
    container_name: nginx
    volumes:
      - "./default.conf:/etc/nginx/conf.d/default.conf"
    ports:
      #- "8080:8080"  # windows specific!!!
      - "80:80"
      - "443:443"
    depends_on:
      - backend


  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: always
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "portainer_data:/home/stx/data"
    ports:
      - "8080:8080"
      - "9000:9000"

volumes:
  portainer_data: {}
